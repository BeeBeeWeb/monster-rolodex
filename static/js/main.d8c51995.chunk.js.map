{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","console","log","monsters","map","SearchBox","placeholder","onSearch","type","onChange","e","target","value","App","setState","searchField","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAIaA,G,kBAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAML,EAAMI,QAAQE,OACpB,4BAAKN,EAAMI,QAAQG,aCJdC,EAAW,SAACR,GAErB,OADAS,QAAQC,IAAIV,GAER,qBAAKC,UAAU,YAAf,SAEQD,EAAMW,SAASC,KACX,SAACR,GACG,OACI,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCRlCQ,G,MAAY,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACrC,OACI,uBACIC,KAAK,SACLF,YAAaA,EACbb,UAAU,SACVgB,SAAU,SAAAC,GAAC,OAAIH,EAASG,EAAEC,OAAOC,YCiC9BC,E,kDApCb,aAAe,IAAD,8BACZ,gBAcFN,SAAW,SAAAK,GACT,EAAKE,SAAS,CAAEC,YAAaH,KAb7B,EAAKI,MAAQ,CACXb,SAAU,GACVY,YAAa,IALH,E,gEASO,IAAD,OAClBE,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKP,SAAS,CAAEX,SAAUkB,S,+BAOnC,IAAD,EAC2BC,KAAKN,MAArBD,GADX,EACCZ,SADD,EACWY,aACZQ,EAAmBD,KAAKN,MAAMb,SAASqB,QAAO,SAAC5B,GACnD,OAAOA,EAAQE,KAAK2B,cAAcC,SAASX,EAAYY,wBAEzD,OACE,sBAAKlC,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACEc,SAAUe,KAAKf,SACfD,YAAY,oBACd,cAAC,EAAD,CAAUH,SAAUoB,W,GAhCVK,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d8c51995.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => (\r\n    <div className='card-container'>\r\n        <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n        <h3>{ props.monster.name }</h3>\r\n        <p>{ props.monster.email }</p>\r\n    </div>\r\n)","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport { Card } from '../card/card.component';\r\n\r\nexport const CardList = (props) => { \r\n    console.log(props);\r\n    return (\r\n        <div className='card-list'>\r\n            {\r\n                props.monsters.map(\r\n                    (monster) => {\r\n                        return (\r\n                            <Card key={monster.id} monster={monster}/>\r\n                        );\r\n                    }\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder, onSearch }) => { \r\n    return (\r\n        <input\r\n            type='search'\r\n            placeholder={placeholder}\r\n            className='search'\r\n            onChange={e => onSearch(e.target.value)}\r\n        />\r\n    )\r\n}","import React, { Component } from \"react\";\nimport './App.css';\nimport {CardList} from './components/card-list/card-list.component';\nimport { SearchBox } from \"./components/search-box/search-box.component\";\n\nclass App extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }));\n  }\n\n  onSearch = value => {\n    this.setState({ searchField: value });\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = this.state.monsters.filter((monster) => {\n      return monster.name.toLowerCase().includes(searchField.toLocaleLowerCase());\n    });\n    return (\n      <div className=\"App\">\n        <h1>Monster Rolodex</h1>\n        <SearchBox\n          onSearch={this.onSearch}\n          placeholder='Search monsters' />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}